CREATE TABLE IF NOT EXISTS User (
	UserID 			INT AUTO_INCREMENT PRIMARY KEY,
	Username 		VARCHAR(255) NOT NULL UNIQUE,
	Password		VARCHAR(255) NOT NULL,
	Email 			VARCHAR(255) NOT NULL UNIQUE,
	Firstname 		VARCHAR(255) NOT NULL,
	Lastname 		VARCHAR(255) NOT NULL,
	Userrole 		VARCHAR(255) NOT NULL,
	CONSTRAINT chk_Userrole
		CHECK(Userrole IN('Admin','User'))
);

CREATE TABLE IF NOT EXISTS Answer (
	AnswerID		INT AUTO_INCREMENT PRIMARY KEY,
	Answer			TEXT NOT NULL,
	ADate			TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	User			INT NOT NULL,
	CONSTRAINT AnswerUser
		FOREIGN KEY (User) REFERENCES User(UserID) ON DELETE RESTRICT
);

CREATE TABLE IF NOT EXISTS Comment (
	CommentID 		INT AUTO_INCREMENT PRIMARY KEY,
	Comment 		TEXT NOT NULL,
	CDate 			TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	User 			INT NOT NULL,
	Answer			INT NOT NULL,
	CONSTRAINT fk_CommentUser
		FOREIGN KEY (User) REFERENCES User(UserID) ON DELETE RESTRICT,
	CONSTRAINT fk_CommentAnswer
		FOREIGN KEY (Answer) REFERENCES Answer(AnswerID) ON DELETE RESTRICT
);

CREATE TABLE IF NOT EXISTS Question (
	QuestionID 		INT AUTO_INCREMENT PRIMARY KEY,
	Question 		Text NOT NULL,
	Language 		VARCHAR(255) NOT NULL,
	PublicityState	VARCHAR(255) NOT NULL,
	QDate 			TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	User			INT NOT NULL,
	CONSTRAINT fk_UserQuest
		FOREIGN KEY (User) REFERENCES User(UserID) ON DELETE RESTRICT,
	CONSTRAINT chk_langauage 
		CHECK(Language IN ('German','English')),
	CONSTRAINT chk_pubstate 
		CHECK(PublicityState IN ('public','users only','private'))
);	

CREATE TABLE IF NOT EXISTS Category (
	CategoryID		INT AUTO_INCREMENT PRIMARY KEY,
	CategoryName	VARCHAR(255),
	PreCategory		INT NULL,
	CONSTRAINT fk_PreCat
		FOREIGN KEY (PreCategory) REFERENCES Category(CategoryID) ON DELETE RESTRICT
);

CREATE TABLE IF NOT EXISTS CatQuestion (
	CategoryID		INT,
	QuestionID		INT,
	CONSTRAINT fk_CatQuestCat
		FOREIGN KEY (CategoryID) REFERENCES Category(CategoryID) ON DELETE RESTRICT,
	CONSTRAINT fk_CatQuestQuest
		FOREIGN KEY (QuestionID) REFERENCES Question(QuestionID) ON DELETE RESTRICT, 
	CONSTRAINT PrimKeyCatQuestion
		PRIMARY KEY (CategoryID, QuestionID)
);

CREATE TABLE IF NOT EXISTS Rating (
	RatingID		INT AUTO_INCREMENT PRIMARY KEY,
	Rating			INT NOT NULL,
	User			INT NOT NULL,
	Answer			INT NOT NULL,
	CONSTRAINT fk_RatingUser
		FOREIGN KEY (User) REFERENCES User(UserID) ON DELETE RESTRICT,
	CONSTRAINT fk_Answer
		FOREIGN KEY (Answer) REFERENCES Answer(AnswerID) ON DELETE RESTRICT,
	CONSTRAINT chk_Rating
		CHECK(RATING>=0 and RATING<=5)
);

CREATE TABLE IF NOT EXISTS QuestionAnswer (
	Question		INT,
	Answer			INT,
	Description		VARCHAR(255) NULL,
	CONSTRAINT PrimKeyAnsQuest
		PRIMARY KEY (Question, Answer),
	CONSTRAINT fk_QuestAnsQuest
		FOREIGN KEY (Question) REFERENCES Question(QuestionID) ON DELETE RESTRICT,
	CONSTRAINT fk_QuestAnsAns
		FOREIGN KEY (Answer) REFERENCES Answer(AnswerID) ON DELETE RESTRICT
);